name: prerelease

on:
  push:
    branches: [ develop, "release/**" ]

permissions:
  contents: write
  packages: write

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  prerelease:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: '6.x'

      - name: Determine version
        id: gv
        uses: gittools/actions/gitversion/execute@v3
        with:
          useConfigFile: true

      - name: Show computed version
        run: |
          echo "SemVer: ${{ steps.gv.outputs.SemVer }}"
          echo "NuGetVersionV2: ${{ steps.gv.outputs.NuGetVersionV2 }}"
          echo "FullSemVer: ${{ steps.gv.outputs.FullSemVer }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          cache: true

      - name: Restore
        run: dotnet restore

      - name: Build
        run: |
          dotnet build --no-restore --configuration Release \
            -p:Version=${{ steps.gv.outputs.NuGetVersionV2 }} \
            -p:AssemblyVersion=${{ steps.gv.outputs.MajorMinorPatch }} \
            -p:FileVersion=${{ steps.gv.outputs.MajorMinorPatch }} \
            -p:InformationalVersion='${{ steps.gv.outputs.InformationalVersion }}' \
            -p:ContinuousIntegrationBuild=true

      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal

      - name: Pack
        run: |
          dotnet pack ViewBindings.SourceGenerator/ViewBindings.SourceGenerator.csproj \
            --configuration Release \
            --output ./.artifacts \
            -p:Version=${{ steps.gv.outputs.NuGetVersionV2 }} \
            -p:AssemblyVersion=${{ steps.gv.outputs.MajorMinorPatch }} \
            -p:FileVersion=${{ steps.gv.outputs.MajorMinorPatch }} \
            -p:InformationalVersion='${{ steps.gv.outputs.InformationalVersion }}' \
            -p:ContinuousIntegrationBuild=true \
            -p:IncludeSymbols=true \
            -p:SymbolPackageFormat=snupkg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prerelease-artifacts-${{ steps.gv.outputs.SemVer }}
          path: |
            ./.artifacts/*.nupkg
            ./.artifacts/*.snupkg

      - name: Publish to NuGet.org (pre-release)
        if: ${{ env.NUGET_API_KEY != '' }}
        env:
          # Step-scoped: secret only exists for this step
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push "./.artifacts/*.nupkg" \
            --source https://api.nuget.org/v3/index.json \
            --api-key "$NUGET_API_KEY" \
            --skip-duplicate
          dotnet nuget push "./.artifacts/*.snupkg" \
            --source https://api.nuget.org/v3/index.json \
            --api-key "$NUGET_API_KEY" \
            --skip-duplicate

      - name: Create GitHub prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.gv.outputs.SemVer }}
          name: Prerelease ${{ steps.gv.outputs.FullSemVer }}
          draft: false
          prerelease: true
          generate_release_notes: true
          files: |
            ./.artifacts/*.nupkg
            ./.artifacts/*.snupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

